# Docker specific configs
# use only letters and numbers for the project name
COMPOSE_PROJECT_NAME=artemis
DB_VERSION=21
GUI_ENABLED=true
SYSTEM_VERSION=latest
HISTORIC=false

# Redis config
REDIS_HOST=backend
REDIS_PORT=6379

# Supervisor config
BACKEND_SUPERVISOR_HOST=backend
BACKEND_SUPERVISOR_PORT=9001

# Monitor Supervisor
MON_SUPERVISOR_HOST=monitor
MON_SUPERVISOR_PORT=9001

# API config
API_HOST=postgrest
API_PORT=3000

# Monitor-specific configs
RIS_ID=8522

# DB details (used by all containers)
DB_HOST=postgres
DB_PORT=5432
DB_NAME=artemis_db
DB_USER=artemis_user
DB_PASS=Art3m1s
DB_SCHEMA=public
DB_AUTOCLEAN=24
DB_BACKUP=true
DB_HIJACK_DORMANT=24

# Frontend config
BIND_IP=0.0.0.0
WEBAPP_PORT=8000
ADMIN_USER=admin
ADMIN_PASS=admin123
ADMIN_EMAIL=admin@admin
JS_VERSION=1.0.4
ARTEMIS_WEB_HOST=localhost
GUNICORN_WORKERS=4

# rabbitmq config
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASS=guest
RABBITMQ_IO_THREAD_POOL_SIZE=128

# hasura config
HASURA_HOST=graphql
HASURA_PORT=8080
HASURA_GUI=false

# secret keys
HASURA_SECRET_KEY=@rt3m1s.
JWT_SECRET_KEY=44fe431cdc896ccab691ad0599f4e0a12690ce1ededebe57b825823bc6b4d24f
FLASK_SECRET_KEY=76f8bae45e807865955344c1a58882d38c8ceb4f855f58091642b7d48290af97
SECURITY_PASSWORD_SALT=06a4b397fc7045eac527c2aec3ff46cee5ce30016c760f238c26e79902fe67b6

# custom log filter
HIJACK_LOG_FILTER=[{"community_annotation":"critical"},{"community_annotation":"NA"}]

# fields to preserve in hijack logs
HIJACK_LOG_FIELDS=["prefix","hijack_as","type","time_started","time_last","peers_seen","configured_prefix","timestamp_of_config","asns_inf","time_detected","key","community_annotation","end_tag","outdated_parent","hijack_url"]

# timeout (sec) since last seen BGP update for monitors
MON_TIMEOUT_LAST_BGP_UPDATE=3600

# percentage of monitor peers that have seen hijack updates, required to see corresponding withdrawals to declare a hijack as withdrawn
WITHDRAWN_HIJACK_THRESHOLD=80

# flag to signal whether ARTEMIS should auto-enforce intended process state (running/stopped) on startup
AUTO_RECOVER_PROCESS_STATE=true

# RPKI config
RPKI_VALIDATOR_ENABLED=false
RPKI_VALIDATOR_HOST=routinator
RPKI_VALIDATOR_PORT=3323

# TEST ONLY
TEST_ENV=false
