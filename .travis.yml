language: python

services:
    - docker

env:
    DOCKER_TAG=$(if [ "$TRAVIS_BRANCH" != "master" && "$TRAVIS_PULL_REQUEST_BRANCH" != "" ]; then echo dev-PR${TRAVIS_PULL_REQUEST}; else echo "latest"; fi)

jobs:
    include:
      - stage: check
        install:
            - python -m pip install pre-commit
            - pre-commit install
        script:
            - pre-commit run --all-files
      - stage: build and push docker
        install: []
        before_script:
            - docker pull inspiregroup/artemis-backend || true
            - docker pull inspiregroup/artemis-frontend || true
            - docker pull inspiregroup/artemis-monitor || true
        script:
            - docker build --pull --cache-from inspiregroup/artemis-backend -t inspiregroup/artemis-backend:${DOCKER_TAG} backend/
            - docker build --pull --cache-from inspiregroup/artemis-frontend -t inspiregroup/artemis-frontend:${DOCKER_TAG} frontend/
            - docker build --pull --cache-from inspiregroup/artemis-monitor -t inspiregroup/artemis-monitor:${DOCKER_TAG} monitor/
        after_success:
            - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            - docker push inspiregroup/artemis-backend:${DOCKER_TAG}
            - docker push inspiregroup/artemis-monitor:${DOCKER_TAG}
            - docker push inspiregroup/artemis-frontend:${DOCKER_TAG}
      - stage: test
        name: TestCafe
        install: []
        before_script:
            - docker pull inspiregroup/artemis-backend:${DOCKER_TAG} || true
            - docker pull inspiregroup/artemis-frontend:${DOCKER_TAG} || true
            - docker pull inspiregroup/artemis-monitor:${DOCKER_TAG} || true
            - docker tag inspiregroup/artemis-backend:${DOCKER_TAG} artemis_backend:latest
            - docker tag inspiregroup/artemis-frontend:${DOCKER_TAG} artemis_frontend:latest
            - docker tag inspiregroup/artemis-monitor:${DOCKER_TAG} artemis_monitor:latest
        script:
            - docker-compose -f docker-compose.testcafe.yaml up --abort-on-container-exit
      - name: BackendTest
        install:
            - pip install codecov
        before_script:
            - docker pull inspiregroup/artemis-backend:${DOCKER_TAG} || true
            - docker tag inspiregroup/artemis-backend:${DOCKER_TAG} artemis_backend:latest
            - docker build -t artemis_testing backend/testing
            - docker-compose -f backend/docker-compose.test-backend.yaml up -d
        script:
            - docker run --rm -ti --env-file .env --network artemis_artemis artemis_testing
        after_success:
            - sh convert_coverage.sh
            - codecov
      - stage: benchmark
        install: []
        before_script:
            - docker pull inspiregroup/artemis-backend:${DOCKER_TAG} || true
            - docker tag inspiregroup/artemis-backend:${DOCKER_TAG} artemis_backend:latest
        script:
            - docker-compose -f docker-compose.benchmark.yaml up --abort-on-container-exit
