apiVersion: {{ template "artemis.deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-backend
{{ include "artemis.labels" . | indent 4 }}
  name: {{ .Release.Name }}-backend
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-backend
  replicas: {{ .Values.replicaCount | default 1 }}
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Release.Name }}-backend
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      initContainers:
      - name: populate-pvc
        image: busybox
        volumeMounts:
        - mountPath: /configmaps
          name: backend-configmap
        - mountPath: /pvc
          name: backend-pvc
          subPath: configs
        command: ['sh', '-c', 'false | cp -i /configmaps/config.yaml /configmaps/logging.yaml /configmaps/services.conf /pvc/ 2> /dev/null']
      - name: wait-for-rmq
        image: busybox
        command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-{{ .Values.rabbitmqHost }}-svc {{ .Values.rabbitmqPort}}; do echo waiting for services; sleep 10; done;']
      - name: wait-for-monsuper
        image: busybox
        command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-{{ .Values.monSupervisorHost }}-svc {{ .Values.monSupervisorPort}}; do echo waiting for services; sleep 10; done;']
      containers:
      - env:
        - name: RIS_ID
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: risId
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: dbHost
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: dbName
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: dbPass
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: dbPort
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: dbUser
        - name: DB_VERSION
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: dbVersion
        - name: GUI_ENABLED
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: guiEnabled
        - name: HASURA_GRAPHQL_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: hasuraSecret
        - name: HASURA_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: hasuraHost
        - name: HASURA_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: hasuraPort
        - name: HISTORIC
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: historic
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: rabbitmqHost
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: rabbitmqPass
        - name: RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: rabbitmqPort
        - name: RABBITMQ_USER
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: rabbitmqUser
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: redisHost
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: redisPort
        - name: BACKEND_SUPERVISOR_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: backendSupervisorHost
        - name: BACKEND_SUPERVISOR_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: backendSupervisorPort
        - name: MON_SUPERVISOR_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: monSupervisorHost
        - name: MON_SUPERVISOR_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: monSupervisorPort
        - name: HIJACK_LOG_FILTER
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: hijackLogFilter
        - name: MON_TIMEOUT_LAST_BGP_UPDATE
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: monTimeoutLastBgpUpdate
        - name: HIJACK_LOG_FIELDS
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: hijackLogFields
        - name: ARTEMIS_WEB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: artemisWebHost
        - name: WITHDRAWN_HIJACK_THRESHOLD
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: withdrawnHijackThreshold
        - name: RPKI_VALIDATOR_ENABLED
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: rpkiValidatorEnabled
        - name: RPKI_VALIDATOR_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: rpkiValidatorHost
        - name: RPKI_VALIDATOR_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: rpkiValidatorPort
        - name: TEST_ENV
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: testEnv
       - name: AUTO_RECOVER_PROCESS_STATE
         valueFrom:
           configMapKeyRef:
             name: { { .Release.Name } }-configmap
             key: autoRecoverProcessState
        image: inspiregroup/artemis-backend:{{ .Values.systemVersion }}
        imagePullPolicy: Always
        name: backend
        resources: {}
        volumeMounts:
        - mountPath: /etc/artemis/logging.yaml
          name: backend-pvc
          subPath: configs/logging.yaml
        - mountPath: /etc/artemis/config.yaml
          name: backend-pvc
          subPath: configs/config.yaml
        - mountPath: /etc/supervisor/conf.d/services.conf
          name: backend-pvc
          subPath: configs/services.conf
      restartPolicy: Always
      volumes:
      - configMap:
          name: {{ .Release.Name }}-volumes
        name: backend-configmap
      - persistentVolumeClaim:
          claimName: {{ .Release.Name }}-backend-pvc
        name: backend-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
      {{- end }}
status: {}
