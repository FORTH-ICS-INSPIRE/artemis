apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
{{ include "artemis.labels" . | indent 4 }}
  name: frontend
{{- with .Values.services.frontend }}
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: {{ .replicas | default 1 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: {{  .image  }}:{{ $.Values.systemVersion }}
        imagePullPolicy: Always
        env:
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: apiHost
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: apiPort
        - name: CONFIG_HOST
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: configHost
        - name: CONFIG_PORT
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: configPort
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: databaseHost
        - name: DEFAULT_EMAIL
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: adminEmail
        - name: DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: secret
              key: adminPass
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: secret
              key: jwtSecret
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: rabbitmqHost
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: secret
              key: rabbitmqPass
        - name: RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: rabbitmqPort
        - name: RABBITMQ_USER
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: rabbitmqUser
        - name: NEXT_PUBLIC_SYSTEM_VERSION
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: systemVersion
        - name: MONGODB_USER
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: mongodbUser
        - name: MONGODB_PASS
          valueFrom:
            secretKeyRef:
              name: secret
              key: mongodbPass
        - name: MONGODB_HOST
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: mongodbHost
        - name: MONGODB_PORT
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: mongodbPort
        - name: MONGODB_NAME
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: mongodbName
        - name: CSRF_SECRET
          valueFrom:
            secretKeyRef:
              name: secret
              key: csrfSecret
        - name: TESTING
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: testEnv
      restartPolicy: Always
      {{- with $.Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
      {{- end }}
  {{- end }}
