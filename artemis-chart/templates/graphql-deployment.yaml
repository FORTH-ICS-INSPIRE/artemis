apiVersion: {{ template "artemis.deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-graphql
{{ include "artemis.labels" . | indent 4 }}
  name: {{ .Release.Name }}-graphql
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-graphql
  replicas: {{ .Values.replicaCount | default 1 }}
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Release.Name }}-graphql
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      initContainers:
      - name: wait-for-service
        image: busybox
        command: ['sh', '-c', 'until nc -z {{ .Release.Name}}-{{ .Values.dbHost }}-svc {{ .Values.dbPort }}; do echo waiting for services; sleep 10; done;']
      containers:
      - args:
        - graphql-engine
        - serve
        env:
        - name: HASURA_GRAPHQL_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: hasuraSecret
        - name: HASURA_GRAPHQL_DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: dbUri
        - name: HASURA_GRAPHQL_ENABLE_CONSOLE
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: hasuraGui
        - name: HASURA_GRAPHQL_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: hasuraJwt
        image: hasura/graphql-engine:v1.0.0-alpha45
        name: graphql
        resources: {}
      restartPolicy: Always
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
      {{- end }}
status: {}
