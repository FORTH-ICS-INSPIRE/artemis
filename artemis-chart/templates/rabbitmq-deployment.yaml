apiVersion: {{ template "artemis.deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-rabbitmq
{{ include "artemis.labels" . | indent 4 }}
  name: {{ .Release.Name }}-rabbitmq
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-rabbitmq
  replicas: {{ .Values.replicaCount | default 1 }}
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Release.Name }}-rabbitmq
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: rabbitmqUser
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: rabbitmqPass
        - name: RABBITMQ_IO_THREAD_POOL_SIZE
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: rabbitmqIoThreadPoolSize
        image: rabbitmq:3.8.3-management-alpine
        name: rabbitmq
        resources: {}
        volumeMounts:
        - mountPath: /etc/rabbitmq/enabled_plugins
          name: rabbitmq-configmap0
          subPath: enabled_plugins
      restartPolicy: Always
      volumes:
      - configMap:
          name: {{ .Release.Name }}-volumes
        name: rabbitmq-configmap0
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
      {{- end }}
status: {}
