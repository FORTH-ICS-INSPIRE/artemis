# general
guiEnabled: true
systemVersion: latest
historic: false
replicaCount: 1
# redis
redisHost: backend
redisPort: 6379
# supervisor
backendSupervisorHost: backend
backendSupervisorPort: 9001
# monitor supervisor
monSupervisorHost: monitor
monSupervisorPort: 9001
# api
apiHost: postgrest
apiPort: 3000
# monitor-specific configs
risId: 8522
# database
dbHost: postgres
dbPort: 5432
dbVersion: 21
dbName: artemis_db
dbUser: artemis_user
dbPass: Art3m1s
dbSchema: public
dbAutoClean: false
dbBackup: true
dbHijackDormant: false
# webapp
bindIp: 0.0.0.0
webappHost: frontend
webappPort: 8000
adminUser: admin
adminPass: admin123
adminEmail: admin@admin
gunicornWorkers: 4
jsVersion: 1.0.4
# rabbitmq
rabbitmqHost: rabbitmq
rabbitmqPort: 5672
rabbitmqUser: guest
rabbitmqPass: guest
rabbitmqIoThreadPoolSize: 128
# hasura
hasuraHost: graphql
hasuraPort: 8080
hasuraGui: false
# custom log filter
hijackLogFilter: '[{"community_annotation":"critical"},{"community_annotation":"NA"}]'
# timeout (sec) since last seen BGP update for monitors
monTimeoutLastBgpUpdate: 3600
# fields to preserve in hijack logs
hijackLogFields: '["prefix","hijack_as","type","time_started","time_last","peers_seen","configured_prefix","timestamp_of_config","asns_inf","time_detected","key","community_annotation","rpki_status","end_tag","outdated_parent","hijack_url"]'
# percentage of monitor peers that have seen hijack updates, required to see corresponding withdrawals to declare a
# hijack as withdrawn
withdrawnHijackThreshold: 80
rpkiValidatorEnabled: false
rpkiValidatorHost: routinator
rpkiValidatorPort: 3323
testEnv: false
autoRecoverProcessState: true

# services
svc:
  backend:
    ports:
    - 6379
    - 9001
  monitor:
    ports:
    - 9001
  postgrest:
    ports:
    - 3000
  postgres:
    ports:
    - 5432
  frontend:
    ports:
    - 8000
  rabbitmq:
    ports:
    - 5672
  graphql:
    ports:
    - 8080
ingress:
  enabled: true
  # Used to create an Ingress record.
  host: artemis.com
  tlsEnabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
  graphql:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /v1alpha1/graphql
  frontend:
    annotations:
pvc:
  storage: 1Gi
  # storageClassName: rook-block
  # accessMode: ReadWriteMany

nodeSelector:
