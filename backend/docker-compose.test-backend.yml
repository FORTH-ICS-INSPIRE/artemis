version: '3'
services:
    testing:
        build: ./testing/
        container_name: testing
        depends_on:
            - backend
        networks:
            - artemis
        environment:
            RABBITMQ_HOST: ${RABBITMQ_HOST}
            POSTGRES_HOST: ${POSTGRES_HOST}
            DATABASE_NAME: ${DB_NAME}
            DATABASE_USER: ${DB_USER}
            DATABASE_HOST: ${POSTGRES_HOST}
            DATABASE_PASSWORD: ${DB_PASS}
            BACKEND_HOST: ${SUPERVISOR_HOST}
    backend:
        build: .
        container_name: backend
        depends_on:
            - rabbitmq
            - postgres
        networks:
            - artemis
        expose:
            - 9001
            - 6379
        environment:
            RABBITMQ_HOST: ${RABBITMQ_HOST}
            POSTGRES_HOST: ${POSTGRES_HOST}
            DATABASE_NAME: ${DB_NAME}
            DATABASE_USER: ${DB_USER}
            DATABASE_HOST: ${POSTGRES_HOST}
            DATABASE_PASSWORD: ${DB_PASS}
            DATABASE_VERSION: ${DB_VERSION}
            SUPERVISOR_HOST: ${SUPERVISOR_HOST}
            SUPERVISOR_PORT: ${SUPERVISOR_PORT}
            GUI_ENABLED: "false"
        volumes:
            - ./testing/configs/:/etc/artemis/
            - ./testing/supervisor.d/:/etc/supervisor/conf.d/
    rabbitmq:
        image: rabbitmq:3.7.8-management-alpine
        container_name: rabbitmq
        restart: always
        networks:
            - artemis
        expose:
            - 5671
            - 5672
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        volumes:
            - ./testing/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    postgres:
        image: timescale/timescaledb:1.1.0-pg10
        container_name: postgres
        restart: always
        networks:
            - artemis
        expose:
            - 5432
        environment:
            POSTGRES_DB: ${DB_NAME}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASS}
        volumes:
            - ./testing/db/init.sql:/docker-entrypoint-initdb.d/zinit.sql
            - ./testing/db/data/:/docker-entrypoint-initdb.d/data/
            - ./testing/db/libs/:/docker-entrypoint-initdb.d/libs/
    pg_amqp_bridge:
        image: subzerocloud/pg-amqp-bridge:0.0.6
        container_name: pg_amqp_bridge
        depends_on:
            - postgres
            - backend
            - rabbitmq
        networks:
            - artemis
        environment:
            - POSTGRESQL_URI=postgres://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}
            - AMQP_URI=amqp://${RABBITMQ_HOST}//
            - BRIDGE_CHANNELS=events:amq.direct
        volumes:
            - ./wait-for:/root/wait-for
        command: ["/root/wait-for", "rabbitmq:5672", "-t", "60", "--", "pg-amqp-bridge"]

networks:
    artemis:
