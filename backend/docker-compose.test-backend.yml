version: '3'
services:
    testing:
        build: ./testing/
        container_name: testing
        depends_on:
            - backend
        networks:
            - artemis
        environment:
            RABBITMQ_USER: ${RABBITMQ_USER}
            RABBITMQ_PASS: ${RABBITMQ_PASS}
            RABBITMQ_HOST: ${RABBITMQ_HOST}
            RABBITMQ_PORT: ${RABBITMQ_PORT}
            DB_NAME: ${DB_NAME}
            DB_USER: ${DB_USER}
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_PASS: ${DB_PASS}
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
            HASURA_HOST: ${HASURA_HOST}
            HASURA_PORT: ${HASURA_PORT}
            SUPERVISOR_HOST: ${SUPERVISOR_HOST}
            SUPERVISOR_PORT: ${SUPERVISOR_PORT}
        # volumes:
        #     - ./testing:/root/
    backend:
        image: artemis_backend
        container_name: backend
        depends_on:
            - rabbitmq
            - postgres
        networks:
            - artemis
        expose:
            - ${SUPERVISOR_PORT}
            - ${REDIS_PORT}
        entrypoint:
            - "./entrypoint.test"
        environment:
            RABBITMQ_USER: ${RABBITMQ_USER}
            RABBITMQ_PASS: ${RABBITMQ_PASS}
            RABBITMQ_HOST: ${RABBITMQ_HOST}
            RABBITMQ_PORT: ${RABBITMQ_PORT}
            DB_USER: ${DB_USER}
            DB_PASS: ${DB_PASS}
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_NAME: ${DB_NAME}
            DB_VERSION: ${DB_VERSION}
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
            SUPERVISOR_HOST: ${SUPERVISOR_HOST}
            SUPERVISOR_PORT: ${SUPERVISOR_PORT}
            GUI_ENABLED: "false"
            BULK_TIMER: 0.1
            COVERALLS_REPO_TOKEN: coveralls_token_here
            GIT_BRANCH: ${GIT_BRANCH}
            GIT_ID: ${GIT_ID}
            GIT_AUTHOR_NAME: ${GIT_AUTHOR_NAME}
            GIT_AUTHOR_EMAIL: ${GIT_AUTHOR_EMAIL}
            GIT_COMMITTER_NAME: ${GIT_COMMITTER_NAME}
            GIT_COMMITTER_EMAIL: ${GIT_COMMITTER_EMAIL}
            GIT_MESSAGE: ${GIT_MESSAGE}
            GIT_REMOTE: ${GIT_REMOTE}
            GIT_URL: ${GIT_URL}
            PULL_REQUEST_NUMBER: ${PULL_REQUEST_NUMBER}
            SEMAPHORE_BUILD_NUMBER: ${SEMAPHORE_BUILD_NUMBER}
            SEMAPHORE: ${SEMAPHORE}
            HIJACK_LOG_FILTER: ${HIJACK_LOG_FILTER}
        volumes:
            - ./testing/configs/:/etc/artemis/
            - ./testing/supervisor.d/:/etc/supervisor/conf.d/
            - ./entrypoint.test:/root/entrypoint
    rabbitmq:
        image: rabbitmq:3.7.8-management-alpine
        container_name: rabbitmq
        restart: always
        networks:
            - artemis
        expose:
            - ${RABBITMQ_PORT}
        volumes:
            - ./testing/rabbitmq/enabled-plugins:/etc/rabbitmq/enabled_plugins
    postgres:
        image: timescale/timescaledb:1.1.0-pg10
        container_name: postgres
        restart: always
        networks:
            - artemis
        expose:
            - ${DB_PORT}
        environment:
            POSTGRES_DB: ${DB_NAME}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASS}
        volumes:
            - ./testing/db/init.sql:/docker-entrypoint-initdb.d/zinit.sql
            - ./testing/db/data/:/docker-entrypoint-initdb.d/data/
            - ./testing/db/libs/:/docker-entrypoint-initdb.d/libs/
    pg-amqp-bridge:
        image: subzerocloud/pg-amqp-bridge:0.0.6
        container_name: pg-amqp-bridge
        depends_on:
            - postgres
            - backend
            - rabbitmq
        networks:
            - artemis
        environment:
            - POSTGRESQL_URI=postgres://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}
            - AMQP_URI=amqp://${RABBITMQ_HOST}//
            - BRIDGE_CHANNELS=events:amq.direct
        volumes:
            - ./wait-for:/root/wait-for
        command: ["/root/wait-for", "${RABBITMQ_HOST}:${RABBITMQ_PORT}", "-t", "0", "--", "pg-amqp-bridge"]

networks:
    artemis:
