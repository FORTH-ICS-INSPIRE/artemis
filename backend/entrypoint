#!/bin/bash
make
./wait-for ${RABBITMQ_HOST}:${RABBITMQ_PORT} -t 0
./wait-for ${DB_HOST}:${DB_PORT} -t 0

version=$(PGPASSWORD=$DB_PASS psql postgres://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME} -c "select version from db_details;" -tA)

start_backend() {
    echo "[+] Starting Backend"
    if [ "$GUI_ENABLED" = "true" ]; then
        ./wait-for ${HASURA_HOST}:${HASURA_PORT} -t 0
        result=$(curl -s "http://${HASURA_HOST}:${HASURA_PORT}/v1/query" -H "Content-Type: application/json" -H "X-Hasura-Access-Key: ${HASURA_GRAPHQL_ACCESS_KEY}" --data '{"type":"replace_metadata","args":{"tables":[{"table":"view_db_details","object_relationships":[],"array_relationships":[],"insert_permissions":[],"select_permissions":[{"role":"user","comment":null,"permission":{"allow_aggregations":true,"columns":["version","upgraded_on"],"filter":{}}}],"update_permissions":[],"delete_permissions":[],"event_triggers":[]},{"table":"view_processes","object_relationships":[],"array_relationships":[],"insert_permissions":[],"select_permissions":[{"role":"user","comment":null,"permission":{"allow_aggregations":true,"columns":["name","running","timestamp"],"filter":{}}}],"update_permissions":[],"delete_permissions":[],"event_triggers":[]},{"table":"view_bgpupdates","object_relationships":[],"array_relationships":[],"insert_permissions":[],"select_permissions":[{"role":"user","comment":null,"permission":{"allow_aggregations":true,"columns":["prefix","origin_as","peer_asn","as_path","service","type","communities","timestamp","hijack_key","handled","matched_prefix","orig_path"],"filter":{}}}],"update_permissions":[],"delete_permissions":[],"event_triggers":[]},{"table":"view_configs","object_relationships":[],"array_relationships":[],"insert_permissions":[],"select_permissions":[{"role":"user","comment":null,"permission":{"allow_aggregations":true,"columns":["raw_config","comment","time_modified"],"filter":{}}}],"update_permissions":[],"delete_permissions":[],"event_triggers":[]},{"table":"view_hijacks","object_relationships":[],"array_relationships":[],"insert_permissions":[],"select_permissions":[{"role":"user","comment":null,"permission":{"allow_aggregations":true,"columns":["active","dormant","comment","configured_prefix","hijack_as","ignored","key","mitigation_started","num_asns_inf","num_peers_seen","peers_seen","peers_withdrawn","prefix","resolved","seen","time_detected","time_ended","time_last","time_started","timestamp_of_config","type","under_mitigation","withdrawn","outdated"],"filter":{}}}],"update_permissions":[],"delete_permissions":[],"event_triggers":[]},{"table":"view_stats","object_relationships":[],"array_relationships":[],"insert_permissions":[],"select_permissions":[{"role":"user","comment":null,"permission":{"allow_aggregations":true,"columns":["monitored_prefixes","configured_prefixes"],"filter":{}}}],"update_permissions":[],"delete_permissions":[],"event_triggers":[]}],"query_templates":[],"remote_schemas":[]}}')
        if [[ $result = *error* ]]; then
            echo "[!] initialization of Hasura failed: $result"
            exit -1
        fi
    fi
    sed -i 's/bind 127.0.0.1/# bind 127.0.0.1/g' /etc/redis/redis.conf
    redis-server /etc/redis/redis.conf --daemonize yes --protected-mode no
    supervisord -n
}

if [ $version -eq $DB_VERSION ]; then
    echo "[+] Running on intended database version ($DB_VERSION).. No migration required"
    start_backend
elif [ $version -gt $DB_VERSION ]; then
    echo "[!] Trying to run on a newer ($version) than intended ($DB_VERSION) database version. Please do the following steps:"
    echo "[!] git pull origin master"
    echo "[!] docker-compose pull"
    echo "[!] start ARTEMIS normally"
    exit -1
else
    echo "[!] Older ($version) than intended ($DB_VERSION) Database version found.. Trying to migrate database automatically"
    python -u migrate/migrate.py
    if [ "$?" -eq 0 ]; then
        echo "[+] Migration sucessful.."
        start_backend
    else
        echo "[+] Automated migration failed. Please provide the logs to the development team."
        exit -1
    fi
fi
