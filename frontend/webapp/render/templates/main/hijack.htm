{% extends "base/layout.htm" %}

{% block title %}
    {{super()}} - Hijack
{% endblock %}

{% block head %}
    {{super()}}
    <link rel="stylesheet" href="{{ url_for('static', filename='css/index.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='datatable/dataTables.bootstrap4.min.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/codemirror.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/merge.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/switches.css') }}">
    <link rel="stylesheet" href="https://cdn.datatables.net/rowreorder/1.2.5/css/rowReorder.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.2.3/css/responsive.dataTables.min.css">
{% endblock %}

{% block page_content %}
    {{super()}}
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Viewing Hijack <small id="hijack_status"></small></h1>
            </div>
            <div class="col-lg-9">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Hijack Information
                        <span id="hijack_acknowledged_badge" class="badge badge-acknowledged float-right"></button>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_hijacker_as">Hijacker AS:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <cc_as><input id="info_hijack_as" class="form-control" type="text" readonly></cc_as>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_hijack_type">Type:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_type" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_peers_seen"># Peers Seen:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_num_peers_seen" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_ases_infected"># ASes Infected:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_num_asns_inf" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_prefix">Prefix:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_prefix" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_matched_prefix_hijack">Matched:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_matched_prefix" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_config">Config:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_config_timestamp" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_hijack_key">Key:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_key" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b helpText="field_time_started">Time Started:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_time_started" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b helpText="field_time_detected">Time Detected:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_time_detected" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b helpText="field_time_last_update">Last Update:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_last_update" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b helpText="field_time_ended">Time Ended:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_time_ended" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b helpText="field_mitigation_started">Mitigation Started:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_mitigation_started" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b helpText="field_community_annotation">Community Annotation:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_community_annotation" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6 mt-4">
                                        <p><b>Display Peers Seen Hijack:</b></p>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-5">
                                        <button class="btn btn-info" type="button" data-toggle="collapse" data-target="#seenHijackUpdate" aria-expanded="false" aria-controls="seenHijackUpdate">BGP Announcement</button>
                                    </div>
                                    <div class="col-lg-5">
                                          <button class="btn btn-info" type="button" data-toggle="collapse" data-target="#seenHijackWithdraw" aria-expanded="false" aria-controls="seenHijackWithdraw">BGP Withdrawal</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3">
                {% if current_user.has_roles('admin') %}
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <i class="fa fa-bell fa-fw"></i> Hijack Actions
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-lg-7 offset-lg-1">
                                    <select class="form-control form-control-sm-auto" id="hijack_action_selection">
                                    </select>
                                </div>
                                <div class="col-lg-4">
                                    <button id="hijack_apply_action" type="button" class="btn btn-primary btn-sm">Apply</button>
                                </div>
                            </div>
                        </div>
                    </div>
                {% endif %}
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Comments
                        {% if current_user.has_roles('admin') %}
                        <button type="button" id="comment_action" class="btn btn-primary btn-sm float-right">Edit</button>
                        {% endif %}
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <form><textarea id="code_comment_box" name="code_comment_box"></textarea></form>
                                <div id="comment_alert_box"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 my-1 mb-4">
                <div class="collapse multi-collapse" id="seenHijackUpdate">
                    Peers Seen Hijack BGP Announcement:
                    <div class="card card-body" id="seenHijackUpdate_text"></div>
                </div>
            </div>
            <div class="col-lg-6 my-1 mb-4">
                <div class="collapse multi-collapse" id="seenHijackWithdraw">
                    Peers Seen Hijack BGP Withdrawal:
                    <div class="card card-body" id="seenHijackWithdraw_text">
                    </div>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Related BGP Updates
                    </div>
                    <div class="panel-body">
                        <table class="table table-striped table-bordered" style="width:100%" id="bgp_updates">
                            <thead>
                                <th helpText="field_bgp_timestamp">Timestamp</th>
                                <th helpText="field_prefix">Prefix</th>
                                <th helpText="field_origin_as">Origin AS</th>
                                <th helpText="field_as_path">AS Path</th>
                                <th helpText="field_peer_as">Peer AS</th>
                                <th helpText="field_service">Service</th>
                                <th helpText="field_bgp_update_type">Type</th>
                                <th helpText="field_bgp_handle">Status</th>
                                <th helpText="field_bgp_update_more">More</th>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th>Timestamp</th>
                                    <th>Prefix</th>
                                    <th>Origin AS</th>
                                    <th>AS Path</th>
                                    <th>Peer AS</th>
                                    <th>Service</th>
                                    <th>Type</th>
                                    <th>Status</th>
                                    <th>More</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="row">
                    <div class="col-lg-3">
                        <p class="float-right">Live Update:</p>
                    </div>
                    <div class="col-lg-6">
                        <label class="switch">
                            <input data-toggle="toggle" id="live_update_button" name="live_update_switch" type="checkbox" checked="">
                            <span class="slider round"></span>
                        </label>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                </hr>
                <p class="float-right"><i>Times are shown in your local time zone <b id="timezone"></b>.</i></p>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        View distinct values
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="panel-body">
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-lg-4">
                                                <select class="form-control" id="distinct_values_selection">
                                                    <option value="select">Select</option>
                                                    <option value="origin_as">Origin AS</option>
                                                    <option value="peer_asn">Peer AS</option>
                                                    <option value="service">Service</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-lg-10 offset-lg-1">
                                <div class="card card-body card-body-hide" id="distinct_values_text"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% if current_user.has_roles('admin') %}
        <div class="modal" id="learnRuleModal" tabindex="-1" role="dialog" aria-labelledby="learnRuleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg" role="document">
                 <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="learnRuleModalLabel">Configuration diff (Learn new rule)</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                             <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" id="modal-body-new-rule-config">
                        <div id="modal_display_config_comparison">
                            <div class="row">
                                <div class="col-lg-6" style="text-align: center;"> Old configuration </div>
                                <div class="col-lg-6" style="text-align: center;"> New configuration </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div id="view_config_learn_diffs"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="learnRuleModalApprove" data-dismiss="modal">Add rule</button>
                        <button type="button" class="btn btn-secondary" id="learnRuleModalNoChange" data-dismiss="modal">Proceed with no change</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal" id="learnRuleModalLabelStatus" tabindex="-1" role="dialog" aria-labelledby="learnRuleModalLabelStatus" aria-hidden="true">
            <div class="modal-dialog modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-body" id="modal-body-new-rule-config-status"></div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="deleteHijacksModal" tabindex="-1" role="dialog" aria-labelledby="deleteHijacksModal" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteHijacksModalLabel">Delete Hijack</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete the selected hijack? </p></br>

                        This action will also delete all BGP messages related to this hijack and cannot be undone.
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" onclick="action_delete_hijack();" data-dismiss="modal">Delete</button>
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}

{% endblock %}

{% block body %}
    {{super()}}
    {% block scripts %}
        {{super()}}
        <script>
            var table;
            var hijack_obj = {
                'key' : "{{ hijack_key }}"
            };
            var hasura_fetch = ["prefix","origin_as","peer_asn","as_path","service","type","communities","timestamp","hijack_key","handled","matched_prefix","orig_path"];
            var hasura = {
                "subscription": {
                    "count" : {
                        "query": "datatable: search_bgpupdates_by_hijack_key_aggregate(args: {key: \"" + hijack_obj['key']  + "\"}) aggregate { count }",
                    },
                    "view_data": {
                        "query": "view_data: search_bgpupdates_by_hijack_key(args: {key: \"" + hijack_obj['key'] + "\"}, limit: 10, offset: 0, order_by: {timestamp: desc_nulls_first}) {" + hasura_fetch.join(' ') + "} }",
                    },
                },
                "query": {
                    "query": "count_data: search_bgpupdates_by_hijack_key_aggregate(args: {key: \"" + hijack_obj['key']  + "\"}) { aggregate { count } } view_data: search_bgpupdates_by_hijack_key(args: {key: \"" + hijack_obj['key'] + "\"}, limit: 10, offset: 10, order_by: {timestamp: desc_nulls_first}) { " + hasura_fetch.join(' ') + " }"
                },
                "data" : {
                    "view_data": [],
                    "count": 0
                },
                "extra": {
                    "table_callback": null,
                    "type": "bgp_updates",
                    "table_name": "search_bgpupdates_by_hijack_key"
                }
            };
            var ws = null;
            var refresh_state_live = true;

            var static_urls = {
                "handled.png": "{{ url_for('static', filename='images/handled.png') }}",
                "unhadled.png": "{{ url_for('static', filename='images/unhadled.png') }}",
                "rrcs_location": "{{ url_for('static', filename='rrcs_info/collectors_info.json') }}"
            };
            var hijack_redirect = "{{ url_for('main.display_hijack') }}";
            var datatable_parameters = {
                    'order': [
                        {
                            'column': 0,
                            'dir': "desc"
                        }
                    ],
                    'offset': 0,
                    'limit': 0
                };
            var downloadTable_parameters = null;
            var fields_to_display = [
                ['prefix', 'Prefix', 'field_prefix'],
                ['origin_as', 'Origin AS', 'field_origin_as'],
                ['as_path', 'AS Path', 'field_as_path'],
                ['orig_path', 'Aux Path Information', 'field_aux_path_info'],
                ['peer_asn', 'Peer AS', 'field_peer_as'],
                ['service', 'Service', 'field_service'],
                ['type', 'Type', 'field_bgp_update_type'],
                ['communities', 'Communities', 'field_bgp_communities'],
                ['timestamp', 'Timestamp', 'field_bgp_timestamp'],
                ['hijack_key', 'Hijack_key', 'field_hijack_key'],
                ['matched_prefix', 'Matched Prefix', 'field_matched_prefix_hijack'],
                ['hijack_link', 'View Hijack', 'field_view_hijack'],
                ['handled', 'Handled', 'field_bgp_handle']
            ];

            // Columns that can be sorted
            var columns = [
                { data: 'timestamp' },
                { data: 'prefix' },
                { data: 'origin_as' },
                { data: 'as_path' },
                { data: 'peer_asn' },
                { data: 'service' },
                { data: 'type' }
            ];

            var filter_parameters = {
                'time': null,
                'prefix': null,
                'as_path': null,
                'origin_as': null,
                'peer_asn': null,
                'service': null,
                'type': null
            };

            var exlude_columns_from_search = ['Timestamp', 'Hijack', 'Status', 'More'];
            var custom_message_for_search = {
                "Type": "A|W"
            };

            var search_table_map = {
                1: "prefix",
                2: "origin_as",
                3: "as_path",
                4: "peer_asn",
                5: "service",
                6: "type"
            };
            var prefix;
            var diff_editor = null, new_config = null, old_config = null, editor = null;
            var target = document.getElementById("view_config_learn_diffs");

            $('#bgp_updates tfoot th').each(function() {
                var title = $(this).text();
                if(!(exlude_columns_from_search.includes(title))){
                    if(title in custom_message_for_search){
                        var html_ = '<input class="form-control" id="input_' + title + '" type="text" placeholder="' + custom_message_for_search[title] + '" />';
                        html_ += '<div class="invalid-feedback"></div>';
                        $(this).html(html_);
                    }else{
                        var html_ = '<input class="form-control" id="input_' + title + '"s type="text" placeholder="' + title + '" />';
                        html_ += '<div class="invalid-feedback"></div>';
                        $(this).html(html_);
                    }
                }else{
                    $(this).html('');
                }
            });

            function inspect_input_of_search_boxes(){
                $("#bgp_updates tfoot tr th").each(function (index, item) {
                    if(index in search_table_map){
                        var value = $(this).children("input").val().trim();
                        if(value == null || value == ''){
                            filter_parameters[search_table_map[index]] = null;
                            if($(this).children("input").hasClass("is-invalid")){
                                $(this).children("input").removeClass("is-invalid");
                                $(this).children("div").hide();
                            }
                        }else{
                            if(search_table_map[index] == 'prefix' || search_table_map[index] == 'matched_prefix'){
                                filter_parameters[search_table_map[index]] = input_filter_prefix(value, $(this));
                            }else if(search_table_map[index] == 'origin_as' || search_table_map[index] == 'peer_asn'){
                                var number_reg = /^\s*(\d+)\s*$/;
                                var match = number_reg.exec(value);
                                var origin_as = null;
                                if(match != null){
                                    origin_as = parseInt(match[1]);
                                }else{
                                    origin_as = -1;
                                }
                                if(0 < origin_as && origin_as < 4199999999){
                                    filter_parameters[search_table_map[index]] = origin_as;
                                    if($(this).children("input").hasClass("is-invalid")){
                                        $(this).children("input").removeClass("is-invalid");
                                        $(this).children("div").hide();
                                    }
                                }else{
                                    $(this).children("input").addClass("is-invalid");
                                    $(this).children("div").text('Not an ASN');
                                    $(this).children("div").show();
                                }
                            }else if(search_table_map[index] == 'type'){
                                var type_regex = /^\s*(A|W|a|w)\s*/;
                                var match = type_regex.exec(value);
                                var type = null;

                                if(match != null){
                                    type = match[1].toUpperCase();
                                    filter_parameters[search_table_map[index]] = type;
                                    if($(this).children("input").hasClass("is-invalid")){
                                        $(this).children("input").removeClass("is-invalid");
                                        $(this).children("div").hide();
                                    }
                                }else{
                                    $(this).children("input").addClass("is-invalid");
                                    $(this).children("div").text('Not A|W');
                                    $(this).children("div").show();
                                }
                            }else if(search_table_map[index] == 'service'){
                                var service_regex = /^\s*(\S.*\S)\s*/;
                                var match = service_regex.exec(value);
                                if(match != null){
                                    filter_parameters[search_table_map[index]] = match[1];
                                }
                            }else if(search_table_map[index] == 'as_path'){
                                var as_path_reg = /^\s*[(\d+)\s]*$/;
                                var match = as_path_reg.exec(value);
                                if(match != null){
                                    filter_parameters[search_table_map[index]] = match[0].replace(/\s+/g, ',');
                                    if($(this).children("input").hasClass("is-invalid")){
                                        $(this).children("input").removeClass("is-invalid");
                                        $(this).children("div").hide();
                                    }
                                }else{
                                    $(this).children("input").addClass("is-invalid");
                                    $(this).children("div").text('AS Path should include only integers');
                                    $(this).children("div").show();
                                }
                            }else{
                                filter_parameters[search_table_map[index]] = value;
                            }
                        }
                    }
                });
            }

            function construct_filter_bgp_update_query(){
                var filters = [];
                var download_filters = [];
                var as_path = null;
                inspect_input_of_search_boxes();

                download_filters.push('hijack_key.cs.{'+ hijack_obj['key'] + "}");

                if(filter_parameters['time'] != null){
                    filters.push('{ timestamp: {_gte: "' + filter_parameters['time']['start_time'] + '"} }');
                    filters.push('{ timestamp: {_lte: "' + filter_parameters['time']['end_time'] + '"} }');
                    download_filters.push('timestamp.gte.' + filter_parameters['time']['start_time'] + ',timestamp.lte.' + filter_parameters['time']['end_time']);
                }

                if(filter_parameters['matched_prefix'] != null){
                    filters.push('{ matched_prefix: {_eq: "' + filter_parameters['matched_prefix'] + '"} }');
                    download_filters.push('matched_prefix.eq.' + filter_parameters['matched_prefix']);
                }

                if(filter_parameters['prefix'] != null){
                    filters.push('{ prefix: {_eq: "' + filter_parameters['prefix'] + '"} }');
                    download_filters.push('prefix.eq.' + filter_parameters['prefix']);
                }

                if(filter_parameters['origin_as'] != null){
                    filters.push('{ origin_as: {_eq: "' + filter_parameters['origin_as'] + '"} }');
                    download_filters.push('origin_as.eq.' + filter_parameters['origin_as']);
                }

                if(filter_parameters['as_path'] != null){
                    hasura['extra']['table_name'] = "search_bgpupdates_by_as_path_and_hijack_key";
                    as_path = "as_paths: \"{" + filter_parameters['as_path'] + '}\"';
                    download_filters.push('as_path.cs.{' + filter_parameters['as_path'] + "}");
                }

                if(filter_parameters['peer_asn'] != null){
                    filters.push('{ peer_asn: {_eq: "' + filter_parameters['peer_asn'] + '"} }');
                    download_filters.push('peer_asn.eq.' + filter_parameters['peer_asn']);
                }

                if(filter_parameters['service'] != null){
                    var _service = filter_parameters['service'].replace(/ -> |-> | -> |->/gi, '|');
                    filters.push('{ service: {_like: "%' + _service + '%"} }');
                    download_filters.push('service.like.*' + _service + '*');
                }

                if(filter_parameters['type'] != null){
                    filters.push('{ type: {_eq: "' + filter_parameters['type'] + '"} }');
                    download_filters.push('type.eq.' + filter_parameters['type']);
                }

                if(filters.length > 0 || as_path != null){
                    $("#distinct_values_selection").val('select');
                    $('#distinct_values_text').val("");
                    $('#distinct_values_text').hide();
                    if(as_path  == null){
                        datatable_parameters['and'] = 'args: {key: \"' + hijack_obj['key'] + '\"}, where: { _and: [' + filters.join() + '] }';
                        hasura['extra']['table_name'] = "search_bgpupdates_by_hijack_key";
                    }else{
                        datatable_parameters['and'] = 'args: {' + as_path + ', key: \"' + hijack_obj['key'] + '\"}, where: { _and: [' + filters.join() + '] }';
                        hasura['extra']['table_name'] = "search_bgpupdates_by_as_path_and_hijack_key";
                    }
                    downloadTable_parameters = '(' + download_filters.join() + ')';
                }else{
                    datatable_parameters['and'] = 'args: {key: \"' + hijack_obj['key'] + '\"}';
                    downloadTable_parameters = null;
                    hasura['extra']['table_name'] = "search_bgpupdates_by_hijack_key";
                }


                downloadTable_update_link();
            }

            function render_table(ws){
                construct_filter_bgp_update_query();

                table = $('#bgp_updates').DataTable( {
                    "processing": false,
                    "serverSide": true,
                    "searching": false,
                    "pagingType": "numbers",
                    ajax: function(data, callback, settings) {
                        let count_query = [];
                        let data_query = [];

                        var sort;
                        if(data.order[0].dir == 'desc'){
                            sort = 'desc_nulls_first';
                        }else{
                            sort = 'asc';
                        }
                        datatable_parameters['offset'] = data.start;
                        datatable_parameters['limit'] = data.length;

                        count_query.push(" count_data: ");
                        count_query.push(hasura['extra']['table_name']);
                        count_query.push("_aggregate");

                        if(datatable_parameters['and'] != null){
                            count_query.push("(");
                            count_query.push(datatable_parameters['and']);
                            count_query.push(") { aggregate { count } } ");
                        }else{
                            count_query.push(" { aggregate { count } } ");
                        }

                        data_query.push("view_data: ");
                        data_query.push(hasura['extra']['table_name']);
                        data_query.push("(limit: ");
                        data_query.push(datatable_parameters['limit']);
                        data_query.push(", offset: ");
                        data_query.push(datatable_parameters['offset']);
                        data_query.push(", order_by: {");
                        data_query.push(columns[data.order[0].column].data);
                        data_query.push(": ");
                        data_query.push(sort);
                        data_query.push(" } ");

                        if(datatable_parameters['and'] != null){
                            data_query.push(datatable_parameters['and']);
                        }
                        data_query.push(") { ");
                        data_query.push(hasura_fetch.join(' '));
                        data_query.push(" }");

                        count_open_details = 0;

                        hasura['subscription']['count']['query'] = "{" + count_query.join('') + "}";
                        hasura['subscription']['view_data']['query'] = "{" + data_query.join('') + "}";
                        hasura['query']['query'] = "{" + count_query.join('') + " " + data_query.join('') + "}";
                        hasura['extra']['table_callback'] = callback;

                        if(refresh_state_live){
                            fetchDatatableLive(ws);
                        }else{
                            fetchDatatable();
                        }
                    },
                    initComplete: function() {
                        var api = this.api();
                        api.columns().every(function() {
                            var that = this;
                            var column_index = that[0][0]
                            $('input', this.footer()).on('keydown', function(ev) {
                                if (ev.keyCode == 13) { //only on enter keypress (code 13)
                                    construct_filter_bgp_update_query();
                                    that.draw()
                                }
                            });
                        });
                        $("#bgp_updates_wrapper").children('div').eq(0).children('div').eq(1).html('<a id="download_table_button" href="#" target="_blank" class="btn btn-primary btn-sm float-right" role="button">Download Table</a>');
                        downloadTable_update_link();
                    },
                    "order": [[ 0, "desc" ]],
                    "columns": [
                        { data: 'timestamp', "width": "150px"},
                        { data: 'prefix' },
                        { data: 'origin_as', "width": "80px" },
                        { data: 'as_path' },
                        { data: 'peer_asn', "width": "80px" },
                        { data: 'service' },
                        { data: 'type', "width": "14px" },
                        { data: 'handled', "width": "14px" },
                        {
                            "className":      'details-control',
                            "orderable":      false,
                            "data":           null,
                            "defaultContent": '',
                            "width": "14px"
                        }
                    ],
                    "columnDefs": [
                        {
                            "targets": [7,8],
                            "orderable": false,
                        },
                        {
                            "targets": [6,7,8],
                            "className": "text-center",
                        }
                    ],
                    "responsive": true
                });
            }

            $(document).ready(function(){

                ws = new WebSocket('wss://' + window.location.hostname + '/api/graphql', 'graphql-ws');
                ws.addEventListener('open', (event) => {
                    fetch("/jwt/auth", {
                        method: "GET",
                        credentials: 'include',
                    })
                    .then(response => response.json())
                    .then(data => ws.send(JSON.stringify({
                        type:"connection_init",
                        payload:{
                            headers:{
                                "Content-Type":"application/json",
                                "Authorization":"Bearer " + data['access_token']
                            }
                        }
                    })))
                    .catch(error => console.error(error));
                });

                ws.addEventListener('message', function conn_ack(event) {
                    data = JSON.parse(event.data);
                    if(data.type === 'connection_ack') {
                        ws.removeEventListener('message', conn_ack);
                        fetchHijackByKeyLive(ws, hijack_obj['key'], update_hijack_details);
                        render_table(ws);
                        $('#bgp_updates tbody').on('click', 'td.details-control', function () {
                            var tr = $(this).closest('tr');
                            var row = table.row(tr);
                            if (row.child.isShown()) { // Close More
                                count_open_details -= 1;
                                row.child.hide();
                                if(count_open_details == 0 && refresh_state_live == true){
                                    startDatatableLive(ws);
                                }
                                tr.removeClass('shown');
                            }else { // Enable More
                                if(count_open_details == 0 && refresh_state_live == true){
                                    stopDatatableLive(ws);
                                }
                                count_open_details += 1;
                                row.child( format_bgp_update_expand(row.data())).show();
                                tr.addClass('shown');
                                displayHelpMoreBGPupdate();
                                asn_map_to_name();
                                service_to_name();
                            }
                        });
                    }
                });

                $('#timezone').html(display_timezone());
                displayHelpTextB();
                displayHelpTextTable();
                $('#bgp_updates').on( 'draw.dt', function () {
                    asn_map_to_name();
                    service_to_name();
                });
                $("#navbar_hijack").addClass("active");
            });

            function update_comment_box(comment){
                if(editor == null){
                    $("#code_comment_box").html(comment);
                    editor = CodeMirror.fromTextArea(document.getElementById("code_comment_box"), {
                        lineNumbers: true,
                        indentUnit: 4,
                        readOnly: true
                    });
                    {% if current_user.has_roles('admin') %}
                        editor.setSize("100%", 192);
                    {% else %}
                        editor.setSize("100%", 326);
                    {% endif %}
                }else{
                    editor.setValue(comment);
                }
            }

            function update_hijack_details(data){
                // Nothing to display, redirect to hijacks page
                if(data == null){
                    window.location.href = "{{ url_for('main.display_hijacks') }}";
                }

                if ($('#hijack_action_selection option').length != 0) {
                    $('#hijack_action_selection').empty();
                }

                hijack_obj = data;
                $( "#hijack_status" ).html( format_hijack_status(hijack_obj)) ;
                prefix = hijack_obj['prefix'];
                $( "#info_key" ).val( hijack_obj['key'] );
                $( "#info_type" ).val( hijack_obj['type'] );
                $( "#info_prefix" ).val( hijack_obj['prefix'] );
                $( "#info_hijack_as" ).val( hijack_obj['hijack_as'] );
                $( "#info_num_peers_seen" ).val( hijack_obj['num_peers_seen'] );
                $( "#info_num_asns_inf" ).val( hijack_obj['num_asns_inf'] );
                $( "#info_time_started" ).val( transform_date_to_local( hijack_obj['time_started'] ) );
                $( "#info_time_ended" ).val( transform_date_to_local( hijack_obj['time_ended'] ) );
                $( "#info_time_detected" ).val( transform_date_to_local( hijack_obj['time_detected'] ) );
                $( "#info_mitigation_started" ).val( transform_date_to_local( hijack_obj['mitigation_started'] ) );
                $( "#info_matched_prefix" ).val( hijack_obj['configured_prefix'] );
                $( "#info_config_timestamp" ).val( transform_date_to_local( hijack_obj['timestamp_of_config'] )  );
                $( "#info_last_update" ).val( transform_date_to_local( hijack_obj['time_last'] )  );
                $( "#info_community_annotation" ).val( hijack_obj['community_annotation'] );

                update_comment_box(hijack_obj['comment']);

                var peers_seen = hijack_obj['peers_seen'].sort(function(a,b){ return a - b;});
                var css_row = ['<div class="row">', '</div>'];
                var peers_html = [];
                for (var i = 0; i < peers_seen.length; i++) {
                    if(peers_html.length == 0){
                        peers_html.push(css_row[0]);
                    }else if(i % 4 == 0){
                        peers_html.push(css_row[1]);
                        peers_html.push("</br>");
                        peers_html.push(css_row[0]);
                    }
                    peers_html.push('<div class="col-lg-3"><cc_as><input asn="true" class="form-control" style="text-align:center;" type="text" value="');
                    peers_html.push(peers_seen[i]);
                    peers_html.push('" readonly></div></cc_as>');
                }
                peers_html.push(css_row[1]);
                $( "#seenHijackUpdate_text").html( peers_html.join('') );

                peers_html = [];
                var peers_withdrawn = hijack_obj['peers_withdrawn'].sort(function(a,b){ return a - b;});
                for (var i = 0; i < peers_withdrawn.length; i++) {
                    if(peers_html.length == 0){
                        peers_html.push(css_row[0]);
                    }else if(i % 4 == 0){
                        peers_html.push(css_row[1]);
                        peers_html.push("</br>");
                        peers_html.push(css_row[0]);
                    }
                    peers_html.push('<div class="col-lg-3"><cc_as><input asn="true" class="form-control" style="text-align:center;" type="text" value="');
                    peers_html.push(peers_withdrawn[i]);
                    peers_html.push('" readonly></div></cc_as>');
                }

                peers_html.push(css_row[1]);

                $( "#seenHijackWithdraw_text").html( peers_html.join('') );

                if(hijack_obj['active'] == true){
                    $("#hijack_action_selection").append(new Option("Mark as Resolved", "hijack_action_resolve"));
                    $("#hijack_action_selection").append(new Option("Mark as Ignored", "hijack_action_ignore"));
                    {% if mitigate == True %}
                        if(hijack_obj['under_mitigation'] == false) {
                            $("#hijack_action_selection").append(new Option("Mitigate Hijack", "hijack_action_mitigate"));
                        }
                    {% endif %}
                }else if((hijack_obj['outdated'] == true || hijack_obj['withdrawn'] == true) && (hijack_obj['resolved'] == false && hijack_obj['ignored'] == false)){
                    $("#hijack_action_selection").append(new Option("Mark as Resolved", "hijack_action_resolve"));
                    $("#hijack_action_selection").append(new Option("Mark as Ignored", "hijack_action_ignore"));
                }

                if(hijack_obj['seen'] == true){
                    $('#hijack_acknowledged_badge').removeClass('badge-danger').addClass('badge-primary');
                    $('#hijack_acknowledged_badge').html('Acknowledged');
                    $("#hijack_action_selection").append(new Option("Mark as not Acknowledged", "hijack_action_acknowledge_not"));
                }else{
                    $('#hijack_acknowledged_badge').removeClass('badge-primary').addClass('badge-danger');
                    $('#hijack_acknowledged_badge').html('Not Acknowledged');
                    $("#hijack_action_selection").append(new Option("Mark as Acknowledged", "hijack_action_acknowledge"));
                }

                $('#hijack_acknowledged_badge').show();
                $("#hijack_action_selection").append(new Option("Delete Hijack", "hijack_action_delete"));
                asn_map_to_name();
            }

            {% if current_user.has_roles('admin') %}

                $('#hijack_apply_action').click(function() {
                    let action = $("#hijack_action_selection option:selected").val();
                    let url = "{{ url_for('actions.hijack_action') }}";
                    var obj = null;

                    if(action == "hijack_action_delete"){
                        $("#deleteHijacksModal").modal("show");
                        return;

                    }else if(action == "hijack_action_resolve"){
                        obj = {
                            "hijack_key" : hijack_obj['key'],
                            "hijack_as": hijack_obj['hijack_as'],
                            "hijack_type": hijack_obj['type'],
                            "prefix": hijack_obj['prefix'],
                            "action": "resolve"
                        }

                    }else if(action == "hijack_action_mitigate"){
                        obj = {
                            "hijack_key" : hijack_obj['key'],
                            "prefix": hijack_obj['prefix'],
                            "action": "mitigate"
                        }

                    }else if(action == "hijack_action_ignore"){
                        if( hijack_obj['active'] == true ){
                            $("#learnRuleModal").modal("show");
                        }else{
                            $("#learnRuleModalNoChange").trigger("click");
                        }

                    }else if(action == "hijack_action_acknowledge"){
                        obj = {
                            "hijack_key" : hijack_obj['key'],
                            "state": true,
                            "action": "seen"
                        }

                    }else if(action == "hijack_action_acknowledge_not"){
                        obj = {
                            "hijack_key" : hijack_obj['key'],
                            "state": false,
                            "action": "seen"
                        }
                    }
                    if(obj){
                        postFetch_json(url, obj);
                    }
                } );

                function action_delete_hijack(){
                    let url = "{{ url_for('actions.hijack_action') }}";
                    let obj = {
                        "hijack_key" : hijack_obj['key'],
                        "hijack_as": hijack_obj['hijack_as'],
                        "hijack_type": hijack_obj['type'],
                        "prefix": hijack_obj['prefix'],
                        "action": "delete"
                    };
                    postFetch_json(url, obj);
                }

                $( "#learnRuleModalNoChange" ).click(function() {
                    var obj = {
                        "hijack_key" : hijack_obj['key'],
                        "hijack_as": hijack_obj['hijack_as'],
                        "hijack_type": hijack_obj['type'],
                        "prefix": hijack_obj['prefix'],
                        "action": "ignore"
                    }
                    var url = "{{ url_for('actions.hijack_action') }}";
                    var result = postFetch_json(url, obj);
                });

                $('#learnRuleModal').on('show.bs.modal', function (event) {
                    submit_learn_rule($(this), 'show');
                });

                $("#learnRuleModalApprove").click(function() {
                    submit_learn_rule($(this), 'approve');
                });

                async function submit_learn_rule(modal, action){
                    if(action == 'show'){
                        var latest_config = await fetchLatestConfig();
                        old_config = latest_config.raw_config;

                        obj = {
                            "hijack_key" : hijack_obj['key'],
                            "hijack_as": hijack_obj['hijack_as'],
                            "type_": hijack_obj['type'],
                            "prefix": hijack_obj['prefix'],
                            "action": action
                        };

                        var url = "{{ url_for('actions.learn_hijack_rule') }}";
                        var result = await postFetch_json(url, obj);

                        if(result["status"] == "fail"){
                            var message = [];
                            message.push('<div class="alert alert-danger">');
                            message.push(result["response"]);
                            message.push('</div>');
                            modal.find('.modal-body').html(message.join(''));
                            $('#learnRuleModalApprove').hide();
                        }else{
                            new_config = result["response"];
                            render_config_diffs();
                        }

                    }else if(action == 'approve'){
                        obj = {
                            "hijack_key" : hijack_obj['key'],
                            "hijack_as": hijack_obj['hijack_as'],
                            "type_": hijack_obj['type'],
                            "prefix": hijack_obj['prefix'],
                            "action": action
                        };

                        var url = "{{ url_for('actions.learn_hijack_rule') }}";
                        var result = await postFetch_json(url, obj);

                        var message = [];
                        if(result["status"] == "success"){
                            let obj = {
                                "hijack_key" : hijack_obj['key'],
                                "hijack_as": hijack_obj['hijack_as'],
                                "hijack_type": hijack_obj['type'],
                                "prefix": hijack_obj['prefix'],
                                "action": "ignore"
                            }
                            let url = "{{ url_for('actions.hijack_action') }}";
                            let result = await postFetch_json(url, obj);
                            message.push('<div class="alert alert-success"> The rule was successfully installed!</div>');
                        }else{
                            message.push('<div class="alert alert-danger">');
                            message.push(result["response"]);
                            message.push('</div>');
                        }
                        $('#learnRuleModalLabelStatus').find('.modal-body').html(message.join(''));
                        $('#learnRuleModalLabelStatus').modal('show');
                    }else{
                        return;
                    }
                }

                function render_config_diffs(){
                    $('#view_config_learn_diffs').html('');
                    diff_editor = CodeMirror.MergeView(target, {
                        value: old_config,
                        orig: new_config,
                        lineNumbers: true,
                        mode: "yaml",
                        highlightDifferences: true,
                        connect: "align",
                        collapseIdentical: false
                    });
                }

                function toggleDifferences() {
                    diff_editor.setShowDifferences(highlight = !highlight);
                }

                $('#comment_action').on('click', function (event, state) {
                    if($(this).hasClass("btn-primary")){
                        $('#comment_action').removeClass('btn-primary').addClass('btn-danger')
                        $('#comment_action').html('Save');
                        editor.options.readOnly = false;
                    }else if($(this).hasClass("btn-danger")){
                        var new_comment = editor.getValue();
                        $('#comment_action').removeClass('btn-danger').addClass('btn-warning')
                        $('#comment_action').html('Pending');
                        submit_new_comment(new_comment)
                    }
                });

                async function submit_new_comment(new_comment){
                    obj = {
                        "new_comment" : new_comment,
                        "hijack_key" : hijack_obj['key']
                    };

                    var url = "{{ url_for('actions.submit_new_comment') }}";
                    var result = await postFetch_json(url, obj);

                    if(result["status"] == "fail"){
                        var message = '<div class="alert alert-danger alert-dismissible">'
                        message += '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
                        message += result["response"] + '</div>'
                        $('#comment_action').removeClass('btn-warning').addClass('btn-danger')
                        $('#comment_action').html('Save');

                    }else{
                        var message = '<div class="alert alert-success alert-dismissible">'
                        message += '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
                        message += result["response"] + '</div>'
                        $('#comment_action').removeClass('btn-warning').addClass('btn-primary')
                        $('#comment_action').html('Edit');
                        editor.setValue(result["data"])
                        editor.options.readOnly = true;
                    }
                    $("#comment_alert_box").html(message)
                }
            {% endif %}

            $("#live_update_button").on('change', function() {
                if ($(this).is(':checked')) {
                    refresh_state_live = true;
                    startDatatableLive(ws);
                }else {
                    stopDatatableLive(ws);
                    refresh_state_live = false;
                }
            });

            $("#distinct_values_selection").on('change', function() {
                var distinct_on = $(this).val();

                if(distinct_on == "select"){
                    $('#distinct_values_text').hide();
                    return;
                }

                var query = [];
                if(filter_parameters['as_path'] != null){
                    query.push("{ view_data: search_bgpupdates_by_as_path_and_hijack_key(distinct_on: [");
                }else{
                    query.push("{ view_data: search_bgpupdates_by_hijack_key(distinct_on: [");
                }
                query.push(distinct_on);
                query.push("] ");
                if(datatable_parameters['and'] != null){
                    query.push(datatable_parameters['and']);
                    query.push(")");
                }else{
                    query.push(")");
                }
                query.push(" { ");
                query.push(distinct_on);
                query.push(" } }");

                fetchDistinctValues(distinct_on, query);
            });

            function downloadTable_update_link(){
                var url = "{{ url_for('proxy_api') }}" + "?download_table=true&action=view_bgpupdates";
                if(downloadTable_parameters != null){
                    url += "&parameters=" + downloadTable_parameters;
                }
                $("#download_table_button").attr("href", url);
            }

            function format_bgp_update_expand(d) {
                var html_ = '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">';
                for(item in fields_to_display){
                    html_ += '<tr><td helpText="' + fields_to_display[item][2] +'"><b>' + fields_to_display[item][1] + ':</b></td>';
                    html_ += '<td>' + d[fields_to_display[item][0]] + '</td></tr>';
                }
                html_ += '</table>';
                return html_;
            }

        </script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard-polyfill/2.7.0/clipboard-polyfill.js"></script>
        <script src="{{ url_for('static', filename='js/custom/prod-graphql.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='js/custom/prod-utils.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='datatable/jquery.dataTables.min.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='js/moment-with-locales.min.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='datatable/datetime-moment.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='datatable/dataTables.bootstrap4.min.js') }}{{ js_version }}"></script>
        <script src="https://cdn.datatables.net/rowreorder/1.2.5/js/dataTables.rowReorder.min.js"></script>
        <script src="https://cdn.datatables.net/responsive/2.2.3/js/dataTables.responsive.min.js"></script>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.42.0/codemirror.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.42.0/mode/textile/textile.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/diff_match_patch/20121119/diff_match_patch.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.42.0/addon/merge/merge.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.42.0/mode/yaml/yaml.min.js"></script>

        <script src="{{ url_for('static', filename='js/custom/prod-actions.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='js/custom/prod-display_info.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='js/custom/prod-ripestat.js') }}{{ js_version }}"></script>

    {% endblock %}
{% endblock %}
