{% extends "layout.htm" %}

{% block title %}
    {{super()}} - Hijack
{% endblock %}

{% block head %}
    {{super()}}
    <link rel="stylesheet" href="{{ url_for('static', filename='css/index.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='datatable/dataTables.bootstrap4.min.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/codemirror.css') }}">
    <link rel="stylesheet" href="https://cdn.datatables.net/rowreorder/1.2.5/css/rowReorder.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.2.3/css/responsive.dataTables.min.css">
{% endblock %}

{% block page_content %}
    {{super()}}
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Viewing Hijack <small id="hijack_status"></small></h1>
                {% if mitigate == True and configured != True %}                                
                <div class="alert alert-warning">
                    <strong>Warning!</strong> The prefix that is related to this hijack does not exist in the current configuration file.
                </div>
                {% endif %}
            </div>
            <div class="col-lg-9">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Hijack Information
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_hijacker_as">Hijacker AS:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <cc_as><input id="info_hijack_as" class="form-control" type="text" readonly></cc_as>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_hijack_type">Type:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_type" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_peers_seen"># Peers Seen:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_num_peers_seen" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_ases_infected"># ASes Infected:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_num_asns_inf" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_prefix">Prefix:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_prefix" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_matched_prefix_hijack">Matched:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_matched_prefix" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_config">Config:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_config_timestamp" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <p><b helpText="field_hijack_key">Key:</b></p>
                                    </div>
                                    <div class="col-lg-8">
                                        <input id="info_key" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b helpText="field_time_started">Time Started:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_time_started" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b helpText="field_time_detected">Time Detected:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_time_detected" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b helpText="field_time_last_update">Last Update:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_last_update" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b helpText="field_time_ended">Time Ended:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_time_ended" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b helpText="field_mitigation_started">Mitigation Started:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <input id="info_mitigation_started" class="form-control" type="text" readonly>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <p><b>Display Peers:</b></p>
                                    </div>
                                    <div class="col-lg-6">
                                        <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#seenHijackUpdate" aria-expanded="false" aria-controls="seenHijackUpdate">Seen Hijack BGP Update</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-6 offset-lg-6">
                                          <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#seenHijackWithdraw" aria-expanded="false" aria-controls="seenHijackWithdraw">Seen Hijack BGP Withdrawal</button>
                                    </div>
                                </div> 
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            {% if current_user.has_roles('admin') %}
            <div class="col-lg-3">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Actions
                        {% if current_user.has_roles('admin') %}
                        <button type="button" id="hijack_acknowledged_button" class="btn btn-primary btn-sm float-right hijack-seen-button">Mark Hijack as <b>acknowledged</b></button>
                        {% endif %}
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-4 ">
                                <button id="resolved_button" type="button" class="btn btn-success">Resolve</button>
                            </div>
                            <div class="col-lg-4">
                                {% if mitigate == True and configured == True %}
                                <button id="mitigation_button" type="button" class="btn btn-danger">Mitigate</button>
                                {% endif %}
                            </div>
                            <div class="col-lg-4">
                                <button id="ignored_button" type="button" class="btn btn-warning">Ignore</button>
                            </div>
                        </div>
                    </div>
                </div>
                {% endif %}
            {% if current_user.has_roles('user') %}
            <div class="col-lg-3">
            {% endif %}
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Comments
                        {% if current_user.has_roles('admin') %}
                        <button type="button" id="comment_action" class="btn btn-primary btn-sm float-right">Edit</button>
                        {% endif %}
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <form><textarea id="code_comment_box" name="code_comment_box"></textarea></form>
                                <div id="comment_alert_box"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 my-1">
                <div class="collapse multi-collapse" id="seenHijackUpdate">
                    Peers Seen Hijack BGP Update:
                    <div class="card card-body" id="seenHijackUpdate_text"></div>
                </div>
            </div>
            <div class="col-lg-6 my-1">
                <div class="collapse multi-collapse" id="seenHijackWithdraw">
                    Peers Seen Hijack BGP Withdrawal:
                    <div class="card card-body" id="seenHijackWithdraw_text">
                    </div>
                </div>
            </div>
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bell fa-fw"></i> Related BGP Updates
                    </div>
                    <div class="panel-body">
                        <table class="table table-striped table-bordered" style="width:100%" id="bgp_updates">
                            <thead>
                                <th helpText="field_bgp_timestamp">Timestamp</th>
                                <th helpText="field_prefix">Prefix</th>
                                <th helpText="field_origin_as">Origin AS</th>
                                <th helpText="field_as_path">AS Path</th>
                                <th helpText="field_peer_as">Peer AS</th>
                                <th helpText="field_service">Service</th>
                                <th helpText="field_bgp_update_type">Type</th>
                                <th helpText="field_bgp_handle">Status</th>
                                <th helpText="field_bgp_update_more">More</th>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th>Timestamp</th>
                                    <th>Prefix</th>
                                    <th>Origin AS</th>
                                    <th>AS Path</th>
                                    <th>Peer AS</th>
                                    <th>Service</th>
                                    <th>Type</th>
                                    <th>Status</th>
                                    <th>More</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <p>Last refresh:
                    <b id="last_refresh_time"></b> 
                    <b id="refresh_button">
                        <a href="javascript:refresh_handle('disable');">(Disable Autorefresh)</a>
                    </b>
                </p>
            </div>
            <div class="col-lg-6">
                </hr>
                <p class="float-right"><i>Times are shown in your local time zone <b id="timezone"></b>.</i></p>
            </div>
        </div>

    
{% endblock %}

{% block body %}
    {{super()}}
    {% block scripts %}
        {{super()}}
        <script>
            var table;
            var static_urls = {
                "handled.png": "{{ url_for('static', filename='images/handled.png') }}",
                "unhadled.png": "{{ url_for('static', filename='images/unhadled.png') }}",
                "rrcs_location": "{{ url_for('static', filename='rrcs_info/collectors_info.json') }}"
            };
            var hijack_redirect = "{{ url_for('main.display_hijack') }}";
            var refresh_status = true;
            var datatable_parameters = {
                    'order': [
                        {
                            'column': 0,
                            'dir': "desc"
                        }
                    ],
                    'offset': 0,
                    'limit': 0
                };
            var downloadTable_parameters = null;
            var fields_to_display = [
                ['prefix', 'Prefix', 'field_prefix'],
                ['origin_as', 'Origin AS', 'field_origin_as'],
                ['as_path', 'AS Path', 'field_as_path'],
                ['orig_path', 'Original Path', 'field_original_path'],
                ['peer_asn', 'Peer AS', 'field_peer_as'],
                ['service', 'Service', 'field_service'],
                ['type', 'Type', 'field_bgp_update_type'],
                ['communities', 'Communities', 'field_bgp_communities'],
                ['timestamp', 'Timestamp', 'field_bgp_timestamp'],
                ['hijack_key', 'Hijack_key', 'field_hijack_key'],
                ['matched_prefix', 'Matched Prefix', 'field_matched_prefix_hijack'],
                ['hijack_link', 'View Hijack', 'field_view_hijack'],
                ['handled', 'Handled', 'field_bgp_handle']
            ];

            // Columns that can be sorted
            var columns = [
                { data: 'timestamp' },
                { data: 'prefix' },
                { data: 'origin_as' },
                { data: 'as_path' },
                { data: 'peer_asn' },
                { data: 'service' },
                { data: 'type' }
            ];

            var filter_parameters = {
                'time': null,
                'prefix': null,
                'origin_as': null,
                'peer_asn': null,
                'service': null,
                'type': null
            };

            var exlude_columns_from_search = ['Timestamp', 'Hijack', 'Status', 'More'];
            var custom_message_for_search = {
                "Type": "A|W"
            };
            
            var search_table_map = {
                1: "prefix",
                2: "origin_as",
                3: "as_path",
                4: "peer_asn",
                5: "service",
                6: "type"
            };

            var initial_data = {{ data | safe }};
            var fetch_hijack_parameter = "eq." + initial_data['key'];
            var prefix;

            $('#bgp_updates tfoot th').each(function() {
                var title = $(this).text();
                if(!(exlude_columns_from_search.includes(title))){
                    if(title in custom_message_for_search){
                        var html_ = '<input class="form-control" id="input_' + title + '" type="text" placeholder="' + custom_message_for_search[title] + '" />'; 
                        html_ += '<div class="invalid-feedback"></div>';
                        $(this).html(html_);
                    }else{
                        var html_ = '<input class="form-control" id="input_' + title + '"s type="text" placeholder="' + title + '" />';
                        html_ += '<div class="invalid-feedback"></div>';
                        $(this).html(html_);
                    }
                }else{
                    $(this).html('');
                }
            });

            function inspect_input_of_search_boxes(){
                $("#bgp_updates tfoot tr th").each(function (index, item) {
                    if(index in search_table_map){
                        var value = $(this).children("input").val();
                        if(value == null || value == ''){
                            filter_parameters[search_table_map[index]] = null;
                            if($(this).children("input").hasClass("is-invalid")){
                                $(this).children("input").removeClass("is-invalid");
                                $(this).children("div").hide();
                            }

                        }else{
                            if(search_table_map[index] == 'prefix'){
                                var match_value = null;
                                var regex_match = /((^\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(\/([0-9]|[1-2][0-9]|3[0-2]))?\s*$)|(^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?(\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?\s*$))/;
                                if(regex_match.exec(value)){
                                    match_value = value.replace(/^\s+|\s+$/g, '');
                                    filter_parameters[search_table_map[index]] = match_value;
                                    if($(this).children("input").hasClass("is-invalid")){
                                        $(this).children("input").removeClass("is-invalid");
                                        $(this).children("div").hide();
                                    }
                                }else{
                                    $(this).children("input").addClass("is-invalid");
                                    $(this).children("div").text('Not a valid v4/v6 prefix');
                                    $(this).children("div").show();
                                }
                            }else if(search_table_map[index] == 'origin_as' || search_table_map[index] == 'peer_asn'){
                                var number_reg = /^\s*(\d+)\s*$/;
                                var match = number_reg.exec(value);
                                var origin_as = null;
                                if(match != null){
                                    origin_as = parseInt(match[1]);
                                }else{
                                    origin_as = -1;
                                }
                                if(0 < origin_as && origin_as < 4199999999){
                                    filter_parameters[search_table_map[index]] = origin_as;
                                    if($(this).children("input").hasClass("is-invalid")){
                                        $(this).children("input").removeClass("is-invalid");
                                        $(this).children("div").hide();
                                    }
                                }else{
                                    $(this).children("input").addClass("is-invalid");
                                    $(this).children("div").text('Not an ASN');
                                    $(this).children("div").show();
                                }
                            }else if(search_table_map[index] == 'type'){
                                var type_regex = /^\s*(A|W|a|w)\s*/;
                                var match = type_regex.exec(value);
                                var type = null;

                                if(match != null){
                                    type = match[1].toUpperCase();
                                    filter_parameters[search_table_map[index]] = type;
                                    if($(this).children("input").hasClass("is-invalid")){
                                        $(this).children("input").removeClass("is-invalid");
                                        $(this).children("div").hide();
                                    }
                                }else{
                                    $(this).children("input").addClass("is-invalid");
                                    $(this).children("div").text('Not A|W');
                                    $(this).children("div").show();
                                }
                            }else if(search_table_map[index] == 'service'){
                                var service_regex = /^\s*(\S.*\S)\s*$/;
                                var match = service_regex.exec(value);
                                if(match != null){
                                    filter_parameters[search_table_map[index]] = match[1];
                                }
                            }else{
                                filter_parameters[search_table_map[index]] = value;
                            }
                        }
                    }
                });
            }

            function construct_filter_bgp_update_query(){
                var filters = [];
                var download_filters = [];
                inspect_input_of_search_boxes();

                filters.push('hijack_key.cs.{'+ initial_data['key'] + "}");
                download_filters.push('hijack_key.cs.{'+ initial_data['key'] + "}");

                if(filter_parameters['time'] != null){
                    filters.push('timestamp.gte.' + filter_parameters['time']['start_time'] + ',timestamp.lte.' + filter_parameters['time']['end_time']);
                    download_filters.push('timestamp.gte.' + filter_parameters['time']['start_time'] + ',timestamp.lte.' + filter_parameters['time']['end_time']);
                }

                if(filter_parameters['prefix'] != null){
                    filters.push('prefix.eq.' + filter_parameters['prefix']);
                    download_filters.push('prefix.eq.' + filter_parameters['prefix']);
                }

                if(filter_parameters['origin_as'] != null){
                    filters.push('origin_as.eq.' + filter_parameters['origin_as']);
                    download_filters.push('origin_as.eq.' + filter_parameters['origin_as']);
                }

                if(filter_parameters['as_path'] != null){
                    filters.push('as_path.cs.{' + filter_parameters['as_path'] + "}");
                    download_filters.push('as_path.cs.{' + filter_parameters['as_path'] + "}");
                }

                if(filter_parameters['peer_asn'] != null){
                    filters.push('peer_asn.eq.' + filter_parameters['peer_asn']);
                    download_filters.push('peer_asn.eq.' + filter_parameters['peer_asn']);
                }

                if(filter_parameters['service'] != null){
                    var _service = filter_parameters['service'].replace(/ -> |-> | -> |->/gi, '|');
                    filters.push('service.like.*' + _service + '*');
                    download_filters.push('service.like.*' + _service + '*');
                }

                if(filter_parameters['type'] != null){
                    filters.push('type.eq.' + filter_parameters['type']);
                    download_filters.push('type.eq.' + filter_parameters['type']);
                }

                if(filters.length > 0){
                    datatable_parameters['and'] = '(' + filters.join() + ')';
                    downloadTable_parameters = '(' + download_filters.join() + ')';
                }else{
                    delete datatable_parameters['and'];
                    downloadTable_parameters = null;
                }
                downloadTable_update_link();
            }
            
            function render_table(){
                construct_filter_bgp_update_query();

                table = $('#bgp_updates').DataTable( {
                    "processing": false,
                    "serverSide": true,
                    "searching": false,
                    "pagingType": "numbers",
                    ajax: function(data, callback, settings) {
                        datatable_parameters['offset'] = data.start;
                        datatable_parameters['limit'] = data.length;
                        datatable_parameters['order'] =  columns[data.order[0].column].data + "." + data.order[0].dir;
                        $.ajax({
                            type: "POST",
                            url: "{{ url_for('proxy_api') }}",
                            dataType: "json",
                            data: { "action": "view_bgpupdates", "parameters" : JSON.stringify(datatable_parameters) },
                            success: function(data, status, xhr){
                                callback({
                                    recordsTotal: data.total,
                                    recordsFiltered: data.total,
                                    data: format_bgp_updates_datatable(data.results)
                                });
                            }
                        });
                    },
                    initComplete: function() {
                        var api = this.api();
                        api.columns().every(function() {
                            var that = this;
                            var column_index = that[0][0]
                            $('input', this.footer()).on('keydown', function(ev) {
                                if (ev.keyCode == 13) { //only on enter keypress (code 13)
                                    construct_filter_bgp_update_query();
                                    that.draw()
                                }
                            });
                        });
                        $("#bgp_updates_wrapper").children('div').eq(0).children('div').eq(1).html('<a id="download_table_button" href="#" target="_blank" class="btn btn-primary btn-sm float-right" role="button">Download Table</a>');
                        downloadTable_update_link();
                    },
                    "order": [[ 0, "desc" ]],
                    "columns": [
                        { data: 'timestamp', "width": "150px"},
                        { data: 'prefix' },
                        { data: 'origin_as', "width": "80px" },
                        { data: 'as_path' },
                        { data: 'peer_asn', "width": "80px" },
                        { data: 'service' },
                        { data: 'type', "width": "14px" },
                        { data: 'handled', "width": "14px" },
                        {
                            "className":      'details-control',
                            "orderable":      false,
                            "data":           null,
                            "defaultContent": '',
                            "width": "14px"
                        }
                    ],
                    "rowReorder": {
                        "selector": 'td:nth-child(2)'
                    },
                    "columnDefs": [
                        {
                            "targets": [7,8],
                            "orderable": false,
                        },
                        {
                            "targets": [6,7,8],
                            "className": "text-center",
                        }
                    ],
                    "responsive": true
                });
            }

            $(document).ready(function(){
                $('#last_refresh_time').html(transform_date_to_local($.now()));
                render_table();
                update_hijack_details(initial_data);

                $('#bgp_updates tbody').on('click', 'td.details-control', function () {
                    var tr = $(this).closest('tr');
                    var row = table.row(tr);
                    if (row.child.isShown()) {
                        row.child.hide();
                        refresh_status = true;
                        tr.removeClass('shown');
                    }else {
                        row.child( format(row.data()) ).show();
                        refresh_status = false;
                        tr.addClass('shown');
                        asn_map_to_name();
                        service_to_name();
                        displayHelpMoreBGPupdate();
                    }
                });

                editor = CodeMirror.fromTextArea(document.getElementById("code_comment_box"), {
                    lineNumbers: true,
                    indentUnit: 4,
                    readOnly: true
                });
                {% if current_user.has_roles('admin') %}
                    editor.setSize("100%", 182);
                {% else %}
                    editor.setSize("100%", 316);
                {% endif %}

                setInterval( function () {
                if(refresh_status){
                        $('[data-toggle="tooltip"]').tooltip('hide');
                        table.draw(false);
                        $('.tooltip.show').tooltip('hide');
                        $('#last_refresh_time').html(transform_date_to_local($.now()));
                    }
                }, 5000 );

                $('#timezone').html(display_timezone());
                displayHelpTextB();
                displayHelpTextTable();
                $('#bgp_updates').on( 'draw.dt', function () {
                    asn_map_to_name();
                    service_to_name();
                });
                $("#navbar_hijack").addClass("active");
            });

        
            function format ( d ) {

                var html_ = '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">';
                for(item in fields_to_display){
                    html_ += '<tr><td helpText="' + fields_to_display[item][2] +'"><b>' + fields_to_display[item][1] + ':</b></td>';
                    html_ += '<td>' + d[fields_to_display[item][0]] + '</td></tr>';
                }
                html_ += '</table>';
                return html_;
            }

            function refresh_handle(state){
                if(state == 'disable'){
                    refresh_status = false;
                    $("#refresh_button").html('<a href="javascript:refresh_handle(\'enable\');">(Enable Autorefresh)</a>');
                }else{
                    refresh_status = true;
                    $("#refresh_button").html('<a href="javascript:refresh_handle(\'disable\');">(Disable Autorefresh)</a>');
                }
            }

            function retrieve_hijack(key){
                $.ajax({
                    type: 'POST',
                    url: '{{ url_for('proxy_api') }}',
                    data: { "action": "view_hijacks", "parameters" : JSON.stringify({ "key": key }) },
                    success: function(result){
                        update_hijack_details(result.results[0]);
                    },
                    dataType: 'json'
                });
            }

            function update_hijack_details(data){
                $( "#hijack_status" ).html( format_hijack_status(data)) ;
                prefix = data['prefix'];
                $( "#info_key" ).val( data['key'] );
                $( "#info_type" ).val( data['type'] );
                $( "#info_prefix" ).val( data['prefix'] );
                $( "#info_hijack_as" ).val( data['hijack_as'] );
                $( "#info_num_peers_seen" ).val( data['num_peers_seen'] );
                $( "#info_num_asns_inf" ).val( data['num_asns_inf'] );
                $( "#info_time_started" ).val( transform_date_to_local( data['time_started'] ) );
                $( "#info_time_last" ).val( transform_date_to_local( data['time_last'] ) );
                $( "#info_time_ended" ).val( transform_date_to_local( data['time_ended'] ) );
                $( "#info_time_detected" ).val( transform_date_to_local( data['time_detected'] ) );
                $( "#info_mitigation_started" ).val( transform_date_to_local( data['mitigation_started'] ) );
                $( "#info_matched_prefix" ).val( data['configured_prefix'] );
                $( "#info_config_timestamp" ).val( transform_date_to_local( data['timestamp_of_config'] )  );
                $( "#info_last_update" ).val( transform_date_to_local( data['time_last'] )  );
                $( "#code_comment_box").html( data['comment'] );

                $( "#seenHijackUpdate_text").html( data['peers_seen'].join() );
                $( "#seenHijackWithdraw_text").html( data['peers_withdrawn'].join() );

                if(data['resolved'] == true || data['ignored'] == true){
                    $("#resolved_button").prop("disabled", true);
                    $("#mitigation_button").prop("disabled", true);
                    $("#ignored_button").prop("disabled", true);
                }else if(data['under_mitigation'] == true || data['withdrawn'] == true || data['outdated'] == true){
                    $("#mitigation_button").prop("disabled", true);
                }
                if(data['seen'] == true){
                    $('#hijack_acknowledged_button').removeClass('btn-primary').addClass('btn-danger');
                    $('#hijack_acknowledged_button').html('Mark Hijack as <b>not acknowledged</b>');
                }
                $('#hijack_acknowledged_button').show();
                asn_map_to_name();
            }
           
            {% if current_user.has_roles('admin') %}
            $( "#resolved_button" ).click(function() {
                $.ajax({
                    type: 'POST',
                    url: "{{ url_for('actions.resolve_hijack') }}",
                    data: {
                        "hijack_key" : initial_data['key'],
                        "hijack_as": initial_data['hijack_as'],
                        "type_": initial_data['type'],
                        "prefix": initial_data['prefix']
                     },
                    success: function(result){
                        retrieve_hijack(fetch_hijack_parameter);
                    },
                    dataType: 'json'
                });
            });

            $( "#mitigation_button" ).click(function() {
                $.ajax({
                    type: 'POST',
                    url: "{{ url_for('actions.mitigate_hijack') }}",
                    data: { "hijack_key" : initial_data['key'], "prefix" : prefix },
                    success: function(result){
                        retrieve_hijack(fetch_hijack_parameter);
                    },
                    dataType: 'json'
                });
            });

            $( "#ignored_button" ).click(function() {
                $.ajax({
                    type: 'POST',
                    url: "{{ url_for('actions.ignore_hijack') }}",
                    data: {
                        "hijack_key" : initial_data['key'],
                        "hijack_as": initial_data['hijack_as'],
                        "type_": initial_data['type'],
                        "prefix": initial_data['prefix']
                    },
                    success: function(result){
                        retrieve_hijack(fetch_hijack_parameter);
                    },
                    dataType: 'json'
                });
            });

            $('#comment_action').on('click', function (event, state) {
                if($(this).hasClass("btn-primary")){
                    $('#comment_action').removeClass('btn-primary').addClass('btn-danger')
                    $('#comment_action').html('Save');
                    editor.options.readOnly = false;
                }else if($(this).hasClass("btn-danger")){
                    var new_comment = {"new_comment": editor.getValue(), "hijack_key" : initial_data['key']};
                    $('#comment_action').removeClass('btn-danger').addClass('btn-warning')
                    $('#comment_action').html('Pending');
                    submit_new_comment(new_comment)
                }
            });


            function submit_new_comment(new_comment){
                $.ajax({
                    type: "POST",
                    url: "{{ url_for('actions.submit_new_comment') }}",
                    data: new_comment,
                    success: function(result){
                        if(result["status"] == "fail"){
                            var message = '<div class="alert alert-danger alert-dismissible">'
                            message += '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
                            message += result["response"] + '</div>'
                            $('#comment_action').removeClass('btn-warning').addClass('btn-danger')
                            $('#comment_action').html('Save');

                        }else{
                            var message = '<div class="alert alert-success alert-dismissible">'
                            message += '<a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>'
                            message += result["response"] + '</div>'
                            $('#comment_action').removeClass('btn-warning').addClass('btn-primary')
                            $('#comment_action').html('Edit');
                            editor.setValue(result["data"])
                            editor.options.readOnly = true;
                        }
                        $("#comment_alert_box").html(message)
                    },
                    dataType: "json"
                });
            }

            

            $('#hijack_acknowledged_button').on('click', function (event, state) {
                if($(this).hasClass("btn-primary")){
                    submit_seen(true);
                }else if($(this).hasClass("btn-danger")){
                    submit_seen(false);
                }
            });


            function submit_seen(state){
                $.ajax({
                    type: "POST",
                    url: "{{ url_for('actions.submit_hijack_seen') }}",
                    data: { "hijack_key" : initial_data['key'], "state" : state },
                    success: function(result){
                        if(result["status"] == "success"){
                            if(state == true){
                                $('#hijack_acknowledged_button').removeClass('btn-primary').addClass('btn-danger');
                                $('#hijack_acknowledged_button').html('Mark Hijack as <b>not acknowledged</b>');
                            }else{
                                $('#hijack_acknowledged_button').removeClass('btn-danger').addClass('btn-primary');
                                $('#hijack_acknowledged_button').html('Mark Hijack as <b>acknowledged</b>');
                            }   
                        }
                    },
                    dataType: "json"
                });
            }
            {% endif %}

            function downloadTable_update_link(){
                var url = "{{ url_for('proxy_api') }}" + "?download_table=true&action=view_bgpupdates";
                if(downloadTable_parameters != null){
                    url += "&parameters=" + downloadTable_parameters;
                }
                $("#download_table_button").attr("href", url);
            }

        </script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
        <script src="{{ url_for('static', filename='js/custom/prod-utils.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='datatable/jquery.dataTables.min.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='js/moment-with-locales.min.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='datatable/datetime-moment.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='datatable/dataTables.bootstrap4.min.js') }}{{ js_version }}"></script>
        <script src="https://cdn.datatables.net/rowreorder/1.2.5/js/dataTables.rowReorder.min.js"></script>
        <script src="https://cdn.datatables.net/responsive/2.2.3/js/dataTables.responsive.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.42.0/codemirror.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.42.0/mode/textile/textile.min.js"></script>
        <script src="{{ url_for('static', filename='js/custom/prod-display_info.js') }}{{ js_version }}"></script>
        <script src="{{ url_for('static', filename='js/custom/prod-ripestat.js') }}{{ js_version }}"></script>

    {% endblock %}
{% endblock %}


