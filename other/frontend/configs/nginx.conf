worker_processes 1;

events { worker_connections 1024; }

http {

    server_tokens off;

    server {
        listen 80 default_server;
        listen 8080 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        listen 8443 ssl;
        resolver localhost;
        error_page 497  https://$host:$server_port$request_uri;

        location = /api/graphql {
            proxy_pass http://graphql:8080/v1alpha1/graphql;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Ssl on;
        }

        location / {
            # nginx ACL
            # allow <ACCESS_PREFIX_1>;
            # ...
            # allow <ACCESS_PREFIX_N>;
            # deny all;
            proxy_pass http://frontend:4200/;
            proxy_redirect off;
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Ssl on;
        }
        ssl_certificate /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;

        add_header Strict-Transport-Security "max-age=31536000" always;

        # let's encrypt configuration
        # ssl_certificate /etc/letsencrypt/live/<domain_name>/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/<domain_name>/privkey.pem;
        # include /etc/letsencrypt/options-ssl-nginx.conf;
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        gzip on;
        gzip_proxied any;
        gzip_types
            text/css
            text/javascript
            text/xml
            text/plain
            application/javascript
            application/x-javascript
            application/json;
    }

}
